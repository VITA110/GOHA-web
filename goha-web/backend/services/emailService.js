const nodemailer = require('nodemailer');

class EmailService {
  constructor() {
    this.transporter = null;
    this.inicializarTransporter();
  }

  /**
   * Inicializar configuraci√≥n de Nodemailer
   */
  inicializarTransporter() {
    try {
      this.transporter = nodemailer.createTransport({
        service: process.env.EMAIL_SERVICE || 'gmail',
        auth: {
          user: process.env.EMAIL_USER,
          pass: process.env.EMAIL_PASSWORD
        },
        secure: true,
        tls: {
          rejectUnauthorized: false
        }
      });

      console.log('‚úÖ Transporter de email inicializado correctamente');
    } catch (error) {
      console.error('‚ùå Error al inicializar transporter:', error);
    }
  }

  /**
   * Verificar conexi√≥n con el servicio de email
   */
  async verificarConexion() {
    try {
      if (!this.transporter) {
        throw new Error('Transporter no inicializado');
      }

      await this.transporter.verify();
      console.log('‚úÖ Conexi√≥n con servicio de email verificada');
      return true;
    } catch (error) {
      console.error('‚ùå Error de conexi√≥n con servicio de email:', error);
      return false;
    }
  }

  /**
   * Enviar email de notificaci√≥n al administrador - CONTACTO
   */
  async enviarEmailAdmin(datosFormulario) {
    try {
      const { nombreEmpresa, correo, telefono, motivoContacto, descripcion, fechaEnvio } = datosFormulario;

      const htmlContent = `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
          <div style="background-color: #f8f9fa; padding: 20px; border-radius: 8px;">
            <h2 style="color: #2c3e50; margin-bottom: 20px;">
              üè¢ Nuevo Formulario de Contacto Recibido
            </h2>
            
            <div style="background-color: white; padding: 20px; border-radius: 6px; margin-bottom: 15px;">
              <h3 style="color: #34495e; margin-top: 0;">Informaci√≥n de la Empresa</h3>
              <p><strong>Empresa:</strong> ${nombreEmpresa}</p>
              <p><strong>Email:</strong> ${correo}</p>
              <p><strong>Tel√©fono:</strong> ${telefono}</p>
            </div>

            <div style="background-color: white; padding: 20px; border-radius: 6px; margin-bottom: 15px;">
              <h3 style="color: #34495e; margin-top: 0;">Detalles del Contacto</h3>
              <p><strong>Motivo:</strong> ${motivoContacto}</p>
              <p><strong>Descripci√≥n:</strong></p>
              <div style="background-color: #f8f9fa; padding: 15px; border-radius: 4px; border-left: 4px solid #3498db;">
                ${descripcion}
              </div>
            </div>

            <div style="background-color: #e8f4f8; padding: 15px; border-radius: 6px;">
              <p style="margin: 0; color: #2c3e50; font-size: 14px;">
                <strong>Fecha de env√≠o:</strong> ${new Date(fechaEnvio).toLocaleString('es-ES')}
              </p>
            </div>
          </div>
        </div>
      `;

      const mailOptions = {
        from: process.env.EMAIL_USER,
        to: process.env.ADMIN_EMAIL,
        subject: `[CONTACTO] Nuevo mensaje de ${nombreEmpresa}`,
        html: htmlContent,
        replyTo: correo
      };

      const result = await this.transporter.sendMail(mailOptions);
      
      console.log('üìß Email enviado al administrador:', result.messageId);
      
      return {
        enviado: true,
        messageId: result.messageId,
        destinatario: process.env.ADMIN_EMAIL,
        timestamp: new Date().toISOString()
      };

    } catch (error) {
      console.error('‚ùå Error al enviar email al administrador:', error);
      throw error;
    }
  }

  /**
   * Enviar email de confirmaci√≥n al cliente - CONTACTO
   */
  async enviarEmailConfirmacion(datosFormulario) {
    try {
      const { nombreEmpresa, correo } = datosFormulario;

      const htmlContent = `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
          <div style="background-color: #f8f9fa; padding: 20px; border-radius: 8px;">
            <div style="text-align: center; margin-bottom: 30px;">
              <h1 style="color: #2c3e50; margin-bottom: 10px;">GOHA</h1>
              <p style="color: #7f8c8d; margin: 0;">Soluciones Tecnol√≥gicas</p>
            </div>
            
            <div style="background-color: white; padding: 25px; border-radius: 6px;">
              <h2 style="color: #27ae60; margin-top: 0;">
                ‚úÖ ¬°Hemos recibido tu mensaje!
              </h2>
              
              <p style="color: #2c3e50; font-size: 16px;">
                Estimado equipo de <strong>${nombreEmpresa}</strong>,
              </p>
              
              <p style="color: #34495e; line-height: 1.6;">
                Gracias por contactarnos. Hemos recibido tu solicitud y nuestro equipo la est√° revisando. 
                Te responderemos lo antes posible para ayudarte con tus necesidades tecnol√≥gicas.
              </p>

              <div style="background-color: #e8f6f3; padding: 20px; border-radius: 6px; margin: 20px 0;">
                <p style="margin: 0; color: #27ae60; font-weight: bold;">
                  üìû Tiempo de respuesta estimado: 24-48 horas
                </p>
              </div>

              <p style="color: #34495e; line-height: 1.6;">
                Si tienes alguna pregunta urgente, no dudes en contactarnos directamente.
              </p>

              <div style="margin-top: 30px; padding-top: 20px; border-top: 1px solid #ecf0f1;">
                <p style="margin: 0; color: #7f8c8d; font-size: 14px;">
                  Este es un email autom√°tico, por favor no respondas a este mensaje.
                </p>
              </div>
            </div>
          </div>
        </div>
      `;

      const mailOptions = {
        from: process.env.EMAIL_USER,
        to: correo,
        subject: 'Confirmaci√≥n de contacto - GOHA',
        html: htmlContent
      };

      const result = await this.transporter.sendMail(mailOptions);
      
      console.log('üìß Email de confirmaci√≥n enviado al cliente:', result.messageId);
      
      return {
        enviado: true,
        messageId: result.messageId,
        destinatario: correo,
        timestamp: new Date().toISOString()
      };

    } catch (error) {
      console.error('‚ùå Error al enviar email de confirmaci√≥n:', error);
      throw error;
    }
  }

  /**
   * Enviar email de notificaci√≥n al administrador - SOPORTE
   */
  async enviarEmailAdminSoporte(datosFormulario) {
    try {
      const { nombreEmpresa, correo, telefono, tipoSoporte, ubicacion, descripcion, fechaEnvio } = datosFormulario;

      // Mapear tipo de soporte a texto legible
      const tiposSoporte = {
        'instalacion-software': 'Instalaci√≥n de Software',
        'configuracion-equipos': 'Configuraci√≥n de Equipos',
        'mantenimiento-preventivo': 'Mantenimiento Preventivo',
        'reparacion-hardware': 'Reparaci√≥n de Hardware',
        'soporte-remoto': 'Soporte Remoto',
        'consultoria-tecnica': 'Consultor√≠a T√©cnica',
        'capacitacion': 'Capacitaci√≥n',
        'otro': 'Otro'
      };

      const tipoSoporteTexto = tiposSoporte[tipoSoporte] || tipoSoporte;

      const htmlContent = `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
          <div style="background-color: #f8f9fa; padding: 20px; border-radius: 8px;">
            <h2 style="color: #2c3e50; margin-bottom: 20px;">
              üîß Nueva Solicitud de Soporte T√©cnico
            </h2>
            
            <div style="background-color: white; padding: 20px; border-radius: 6px; margin-bottom: 15px;">
              <h3 style="color: #34495e; margin-top: 0;">Informaci√≥n de la Empresa</h3>
              <p><strong>Empresa:</strong> ${nombreEmpresa}</p>
              <p><strong>Email:</strong> ${correo}</p>
              <p><strong>Tel√©fono:</strong> ${telefono}</p>
            </div>

            <div style="background-color: white; padding: 20px; border-radius: 6px; margin-bottom: 15px;">
              <h3 style="color: #34495e; margin-top: 0;">Detalles del Soporte</h3>
              <p><strong>Tipo de Soporte:</strong> ${tipoSoporteTexto}</p>
              <p><strong>Ubicaci√≥n:</strong> ${ubicacion}</p>
              <p><strong>Descripci√≥n del Problema:</strong></p>
              <div style="background-color: #f8f9fa; padding: 15px; border-radius: 4px; border-left: 4px solid #e74c3c;">
                ${descripcion}
              </div>
            </div>

            <div style="background-color: #fdf2e9; padding: 15px; border-radius: 6px;">
              <p style="margin: 0; color: #2c3e50; font-size: 14px;">
                <strong>Fecha de solicitud:</strong> ${new Date(fechaEnvio).toLocaleString('es-ES')}
              </p>
            </div>
          </div>
        </div>
      `;

      const mailOptions = {
        from: process.env.EMAIL_USER,
        to: process.env.ADMIN_EMAIL,
        subject: `[SOPORTE] Nueva solicitud de ${nombreEmpresa}`,
        html: htmlContent,
        replyTo: correo
      };

      const result = await this.transporter.sendMail(mailOptions);
      
      console.log('üìß Email de soporte enviado al administrador:', result.messageId);
      
      return {
        enviado: true,
        messageId: result.messageId,
        destinatario: process.env.ADMIN_EMAIL,
        timestamp: new Date().toISOString()
      };

    } catch (error) {
      console.error('‚ùå Error al enviar email de soporte al administrador:', error);
      throw error;
    }
  }

  /**
   * Enviar email de confirmaci√≥n al cliente - SOPORTE
   */
  async enviarEmailConfirmacionSoporte(datosFormulario) {
    try {
      const { nombreEmpresa, correo, tipoSoporte } = datosFormulario;

      const tiposSoporte = {
        'instalacion-software': 'Instalaci√≥n de Software',
        'configuracion-equipos': 'Configuraci√≥n de Equipos',
        'mantenimiento-preventivo': 'Mantenimiento Preventivo',
        'reparacion-hardware': 'Reparaci√≥n de Hardware',
        'soporte-remoto': 'Soporte Remoto',
        'consultoria-tecnica': 'Consultor√≠a T√©cnica',
        'capacitacion': 'Capacitaci√≥n',
        'otro': 'Otro'
      };

      const tipoSoporteTexto = tiposSoporte[tipoSoporte] || tipoSoporte;

      const htmlContent = `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
          <div style="background-color: #f8f9fa; padding: 20px; border-radius: 8px;">
            <div style="text-align: center; margin-bottom: 30px;">
              <h1 style="color: #2c3e50; margin-bottom: 10px;">GOHA</h1>
              <p style="color: #7f8c8d; margin: 0;">Soporte T√©cnico Especializado</p>
            </div>
            
            <div style="background-color: white; padding: 25px; border-radius: 6px;">
              <h2 style="color: #e74c3c; margin-top: 0;">
                üîß ¬°Solicitud de Soporte Recibida!
              </h2>
              
              <p style="color: #2c3e50; font-size: 16px;">
                Estimado equipo de <strong>${nombreEmpresa}</strong>,
              </p>
              
              <p style="color: #34495e; line-height: 1.6;">
                Hemos recibido tu solicitud de <strong>${tipoSoporteTexto}</strong> y nuestro equipo t√©cnico 
                la est√° revisando. Nos pondremos en contacto contigo pronto para coordinar la asistencia.
              </p>

              <div style="background-color: #fdf2e9; padding: 20px; border-radius: 6px; margin: 20px 0;">
                <p style="margin: 0; color: #e74c3c; font-weight: bold;">
                  ‚è∞ Tiempo de respuesta: 2-4 horas h√°biles
                </p>
              </div>

              <p style="color: #34495e; line-height: 1.6;">
                Nuestro equipo de soporte t√©cnico se especializa en brindar soluciones r√°pidas y efectivas. 
                Mant√©n tu equipo disponible para cuando nuestros t√©cnicos se comuniquen contigo.
              </p>

              <div style="margin-top: 30px; padding-top: 20px; border-top: 1px solid #ecf0f1;">
                <p style="margin: 0; color: #7f8c8d; font-size: 14px;">
                  Este es un email autom√°tico, por favor no respondas a este mensaje.
                </p>
              </div>
            </div>
          </div>
        </div>
      `;

      const mailOptions = {
        from: process.env.EMAIL_USER,
        to: correo,
        subject: 'Confirmaci√≥n de solicitud de soporte - GOHA',
        html: htmlContent
      };

      const result = await this.transporter.sendMail(mailOptions);
      
      console.log('üìß Email de confirmaci√≥n de soporte enviado al cliente:', result.messageId);
      
      return {
        enviado: true,
        messageId: result.messageId,
        destinatario: correo,
        timestamp: new Date().toISOString()
      };

    } catch (error) {
      console.error('‚ùå Error al enviar email de confirmaci√≥n de soporte:', error);
      throw error;
    }
  }

  /**
   * Enviar email de notificaci√≥n al administrador - EQUIPO
   */
  async enviarEmailAdminEquipo(datosFormulario) {
    try {
      const { nombreEmpresa, correo, telefono, tipoEquipo, ubicacion, descripcion, fechaEnvio } = datosFormulario;

      // Mapear tipo de equipo a texto legible
      const tiposEquipo = {
        'computadora-escritorio': 'Computadora de Escritorio',
        'laptop': 'Laptop',
        'tablet': 'Tablet',
        'smartphone': 'Smartphone',
        'impresora': 'Impresora',
        'monitor': 'Monitor',
        'accesorio': 'Accesorio',
        'otro': 'Otro'
      };

      const tipoEquipoTexto = tiposEquipo[tipoEquipo] || tipoEquipo;

      const htmlContent = `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
          <div style="background-color: #f8f9fa; padding: 20px; border-radius: 8px;">
            <h2 style="color: #2c3e50; margin-bottom: 20px;">
              üíª Nueva Solicitud de Equipo
            </h2>
            
            <div style="background-color: white; padding: 20px; border-radius: 6px; margin-bottom: 15px;">
              <h3 style="color: #34495e; margin-top: 0;">Informaci√≥n de la Empresa</h3>
              <p><strong>Empresa:</strong> ${nombreEmpresa}</p>
              <p><strong>Email:</strong> ${correo}</p>
              <p><strong>Tel√©fono:</strong> ${telefono}</p>
            </div>

            <div style="background-color: white; padding: 20px; border-radius: 6px; margin-bottom: 15px;">
              <h3 style="color: #34495e; margin-top: 0;">Detalles del Equipo</h3>
              <p><strong>Tipo de Equipo:</strong> ${tipoEquipoTexto}</p>
              <p><strong>Ubicaci√≥n:</strong> ${ubicacion}</p>
              <p><strong>Especificaciones Requeridas:</strong></p>
              <div style="background-color: #f8f9fa; padding: 15px; border-radius: 4px; border-left: 4px solid #3498db;">
                ${descripcion}
              </div>
            </div>

            <div style="background-color: #e8f5e8; padding: 15px; border-radius: 6px;">
              <p style="margin: 0; color: #2c3e50; font-size: 14px;">
                <strong>Fecha de solicitud:</strong> ${new Date(fechaEnvio).toLocaleString('es-ES')}
              </p>
            </div>
          </div>
        </div>
      `;

      const mailOptions = {
        from: process.env.EMAIL_USER,
        to: process.env.ADMIN_EMAIL,
        subject: `[EQUIPO] Nueva solicitud de ${nombreEmpresa}`,
        html: htmlContent,
        replyTo: correo
      };

      const result = await this.transporter.sendMail(mailOptions);
      
      console.log('üìß Email de equipo enviado al administrador:', result.messageId);
      
      return {
        enviado: true,
        messageId: result.messageId,
        destinatario: process.env.ADMIN_EMAIL,
        timestamp: new Date().toISOString()
      };

    } catch (error) {
      console.error('‚ùå Error al enviar email de equipo al administrador:', error);
      throw error;
    }
  }

  /**
   * Enviar email de confirmaci√≥n al cliente - EQUIPO
   */
  async enviarEmailConfirmacionEquipo(datosFormulario) {
    try {
      const { nombreEmpresa, correo, tipoEquipo } = datosFormulario;

      const tiposEquipo = {
        'computadora-escritorio': 'Computadora de Escritorio',
        'laptop': 'Laptop',
        'tablet': 'Tablet',
        'smartphone': 'Smartphone',
        'impresora': 'Impresora',
        'monitor': 'Monitor',
        'accesorio': 'Accesorio',
        'otro': 'Otro'
      };

      const tipoEquipoTexto = tiposEquipo[tipoEquipo] || tipoEquipo;

      const htmlContent = `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
          <div style="background-color: #f8f9fa; padding: 20px; border-radius: 8px;">
            <div style="text-align: center; margin-bottom: 30px;">
              <h1 style="color: #2c3e50; margin-bottom: 10px;">GOHA</h1>
              <p style="color: #7f8c8d; margin: 0;">Equipos Tecnol√≥gicos</p>
            </div>
            
            <div style="background-color: white; padding: 25px; border-radius: 6px;">
              <h2 style="color: #3498db; margin-top: 0;">
                üíª ¬°Solicitud de Equipo Recibida!
              </h2>
              
              <p style="color: #2c3e50; font-size: 16px;">
                Estimado equipo de <strong>${nombreEmpresa}</strong>,
              </p>
              
              <p style="color: #34495e; line-height: 1.6;">
                Hemos recibido tu solicitud de <strong>${tipoEquipoTexto}</strong> y nuestro equipo comercial 
                la est√° evaluando. Nos pondremos en contacto contigo pronto para coordinar la cotizaci√≥n y entrega.
              </p>

              <div style="background-color: #e8f5e8; padding: 20px; border-radius: 6px; margin: 20px 0;">
                <p style="margin: 0; color: #3498db; font-weight: bold;">
                  ‚è∞ Tiempo de respuesta: 24-48 horas h√°biles
                </p>
              </div>

              <p style="color: #34495e; line-height: 1.6;">
                Nuestro equipo comercial te contactar√° para proporcionarte una cotizaci√≥n detallada 
                con las mejores opciones disponibles seg√∫n tus especificaciones.
              </p>

              <div style="margin-top: 30px; padding-top: 20px; border-top: 1px solid #ecf0f1;">
                <p style="margin: 0; color: #7f8c8d; font-size: 14px;">
                  Este es un email autom√°tico, por favor no respondas a este mensaje.
                </p>
              </div>
            </div>
          </div>
        </div>
      `;

      const mailOptions = {
        from: process.env.EMAIL_USER,
        to: correo,
        subject: 'Confirmaci√≥n de solicitud de equipo - GOHA',
        html: htmlContent
      };

      const result = await this.transporter.sendMail(mailOptions);
      
      console.log('üìß Email de confirmaci√≥n de equipo enviado al cliente:', result.messageId);
      
      return {
        enviado: true,
        messageId: result.messageId,
        destinatario: correo,
        timestamp: new Date().toISOString()
      };

    } catch (error) {
      console.error('‚ùå Error al enviar email de confirmaci√≥n de equipo:', error);
      throw error;
    }
  }
}

module.exports = new EmailService();